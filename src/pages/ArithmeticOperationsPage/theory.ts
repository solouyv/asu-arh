const convertWholePartToBin: string =
  "Для перевода в двоичную систему, сначала берётся целая часть числа. Она делится на два, пока не дойдёт до нуля, а остаток после каждого деления записывается.";
const convertFloatPartToBin: string =
  "После этого берётся дробная часть, и умножается на 2. После каждого деления, записываем в двоичное число целую часть и продолжаем работать с дробной, пока она не будет равна нулю или в двоичном числе не будет достигнута необходимая точность. Для удобства мы будем дописывать недостающие нули до необходимой точности";
const concatWholeAndFloatPartsOfBin: string =
  "Объединяем целую и дробную части и получаем число в двоичной системе счисления";
const machineRepres: string =
  "Для полного преобразования в двоичный код необходимо придать числу форму, в которой она хранится в компьютере, то есть форму типа 0,101001101";
const mantissa: string =
  "После преобразования необходимо выровнять порядки у чисел. Для этого необходимо увеличить порядок меньшего числа, уменьшая значение мантисы. Также необходимо уровнять мантисы. Для этого необходимо добавить в конце меньшего по длине числа необходимое количество нулей, до уравнения длин чисел.";
const adding: string =
  "Числа полностью готовы к суммированию. Для того, чтобы сложить их, необходимо воспользоваться правилами обычного сложения, учитывая что: 0+0=0, 1+0=1, 0+1=1, 1+1=10.";
const fromMachineToBin: string =
  "Теперь необходимо привести числа обратно в десятичную систему. Для начала преобразуем число в более привычный вид. Для этого нужно сдвинуть запятую вправо на число символов, равное порядку числа.";
const convertWholePartToDec: string =
  "Для перевода двоичного числа в десятичное необходимо это число представить в виде суммы произведений степеней основания двоичной системы счисления на соответствующие цифры в разрядах двоичного числа.";
const convertFloatPartToDec: string =
  "Для перевода двоичного числа в десятичное необходимо это число представить в виде суммы произведений степеней основания двоичной системы счисления на соответствующие цифры в разрядах двоичного числа.";
const convertToReverseCode: string =
  "Для положительного числа совпадает с прямым кодом. Для отрицательного числа все цифры числа заменяются на противоположные (1 на 0, 0 на 1), а в знаковый разряд заносится единица. Так как мы уже преобразовали число в машинное представление, то единицу никуда заносить не нужно.";
const convertToAddingCode: string =
  "Дополнительный код положительного числа совпадает с прямым кодом. Для отрицательного числа дополнительный код образуется путем получения обратного кода и добавлением к младшему разряду единицы.";
const convertAmountToReverseCode: string =
  "В старшем бите 1. Следовательно, в результате сложения получили отрицательное число. Переведем его обратно в прямой код. Для этого найдем обратный код (инвертируем все биты, кроме знакового).";
const convertAmountToStraightCode: string =
  "Теперь находим дополнительный код (прибавляем 1 к младшему разряду).";
const multiply: string =
  "Умножение чисел выполняется также, как и в десятичной системе счисления. Если выполняется умножение чисел с плавующей запятой, то после умножения, от произведения отнимаются количество знаков, равное сумме знаков дробных частей первого и второго числа.";

export const theory = {
  convertWholePartToBin: convertWholePartToBin,
  convertFloatPartToBin: convertFloatPartToBin,
  concatWholeAndFloatPartsOfBin: concatWholeAndFloatPartsOfBin,
  machineRepres: machineRepres,
  mantissa: mantissa,
  adding: adding,
  fromMachineToBin: fromMachineToBin,
  convertWholePartToDec: convertWholePartToDec,
  convertFloatPartToDec: convertFloatPartToDec,
  convertToReverseCode: convertToReverseCode,
  convertToAddingCode: convertToAddingCode,
  convertAmountToReverseCode: convertAmountToReverseCode,
  convertAmountToStraightCode: convertAmountToStraightCode,
  multiply: multiply,
};
